/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as authAuthImport } from './routes/(auth)/_auth'
import { Route as authAuthAuthSignUpImport } from './routes/(auth)/_auth/_auth.sign-up'
import { Route as authAuthAuthSignInImport } from './routes/(auth)/_auth/_auth.sign-in'
import { Route as authAuthAuthResetPasswordImport } from './routes/(auth)/_auth/_auth.reset-password'
import { Route as authAuthAuthForgotPasswordImport } from './routes/(auth)/_auth/_auth.forgot-password'

// Create Virtual Routes

const authImport = createFileRoute('/(auth)')()

// Create/Update Routes

const authRoute = authImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authAuthRoute = authAuthImport.update({
  id: '/_auth',
  getParentRoute: () => authRoute,
} as any)

const authAuthAuthSignUpRoute = authAuthAuthSignUpImport.update({
  id: '/_auth/sign-up',
  path: '/sign-up',
  getParentRoute: () => authAuthRoute,
} as any)

const authAuthAuthSignInRoute = authAuthAuthSignInImport.update({
  id: '/_auth/sign-in',
  path: '/sign-in',
  getParentRoute: () => authAuthRoute,
} as any)

const authAuthAuthResetPasswordRoute = authAuthAuthResetPasswordImport.update({
  id: '/_auth/reset-password',
  path: '/reset-password',
  getParentRoute: () => authAuthRoute,
} as any)

const authAuthAuthForgotPasswordRoute = authAuthAuthForgotPasswordImport.update(
  {
    id: '/_auth/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => authAuthRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_auth': {
      id: '/(auth)/_auth'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authAuthImport
      parentRoute: typeof authRoute
    }
    '/(auth)/_auth/_auth/forgot-password': {
      id: '/(auth)/_auth/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authAuthAuthForgotPasswordImport
      parentRoute: typeof authAuthImport
    }
    '/(auth)/_auth/_auth/reset-password': {
      id: '/(auth)/_auth/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authAuthAuthResetPasswordImport
      parentRoute: typeof authAuthImport
    }
    '/(auth)/_auth/_auth/sign-in': {
      id: '/(auth)/_auth/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authAuthAuthSignInImport
      parentRoute: typeof authAuthImport
    }
    '/(auth)/_auth/_auth/sign-up': {
      id: '/(auth)/_auth/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authAuthAuthSignUpImport
      parentRoute: typeof authAuthImport
    }
  }
}

// Create and export the route tree

interface authAuthRouteChildren {
  authAuthAuthForgotPasswordRoute: typeof authAuthAuthForgotPasswordRoute
  authAuthAuthResetPasswordRoute: typeof authAuthAuthResetPasswordRoute
  authAuthAuthSignInRoute: typeof authAuthAuthSignInRoute
  authAuthAuthSignUpRoute: typeof authAuthAuthSignUpRoute
}

const authAuthRouteChildren: authAuthRouteChildren = {
  authAuthAuthForgotPasswordRoute: authAuthAuthForgotPasswordRoute,
  authAuthAuthResetPasswordRoute: authAuthAuthResetPasswordRoute,
  authAuthAuthSignInRoute: authAuthAuthSignInRoute,
  authAuthAuthSignUpRoute: authAuthAuthSignUpRoute,
}

const authAuthRouteWithChildren = authAuthRoute._addFileChildren(
  authAuthRouteChildren,
)

interface authRouteChildren {
  authAuthRoute: typeof authAuthRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authAuthRoute: authAuthRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof authAuthRouteWithChildren
  '/forgot-password': typeof authAuthAuthForgotPasswordRoute
  '/reset-password': typeof authAuthAuthResetPasswordRoute
  '/sign-in': typeof authAuthAuthSignInRoute
  '/sign-up': typeof authAuthAuthSignUpRoute
}

export interface FileRoutesByTo {
  '/': typeof authAuthRouteWithChildren
  '/forgot-password': typeof authAuthAuthForgotPasswordRoute
  '/reset-password': typeof authAuthAuthResetPasswordRoute
  '/sign-in': typeof authAuthAuthSignInRoute
  '/sign-up': typeof authAuthAuthSignUpRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_auth': typeof authAuthRouteWithChildren
  '/(auth)/_auth/_auth/forgot-password': typeof authAuthAuthForgotPasswordRoute
  '/(auth)/_auth/_auth/reset-password': typeof authAuthAuthResetPasswordRoute
  '/(auth)/_auth/_auth/sign-in': typeof authAuthAuthSignInRoute
  '/(auth)/_auth/_auth/sign-up': typeof authAuthAuthSignUpRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgot-password'
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/forgot-password' | '/reset-password' | '/sign-in' | '/sign-up'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/(auth)/_auth'
    | '/(auth)/_auth/_auth/forgot-password'
    | '/(auth)/_auth/_auth/reset-password'
    | '/(auth)/_auth/_auth/sign-in'
    | '/(auth)/_auth/_auth/sign-up'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRoute: typeof authRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRoute: authRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(auth)"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(auth)": {
      "filePath": "(auth)",
      "children": [
        "/(auth)/_auth"
      ]
    },
    "/(auth)/_auth": {
      "filePath": "(auth)/_auth.tsx",
      "parent": "/(auth)",
      "children": [
        "/(auth)/_auth/_auth/forgot-password",
        "/(auth)/_auth/_auth/reset-password",
        "/(auth)/_auth/_auth/sign-in",
        "/(auth)/_auth/_auth/sign-up"
      ]
    },
    "/(auth)/_auth/_auth/forgot-password": {
      "filePath": "(auth)/_auth/_auth.forgot-password.tsx",
      "parent": "/(auth)/_auth"
    },
    "/(auth)/_auth/_auth/reset-password": {
      "filePath": "(auth)/_auth/_auth.reset-password.tsx",
      "parent": "/(auth)/_auth"
    },
    "/(auth)/_auth/_auth/sign-in": {
      "filePath": "(auth)/_auth/_auth.sign-in.tsx",
      "parent": "/(auth)/_auth"
    },
    "/(auth)/_auth/_auth/sign-up": {
      "filePath": "(auth)/_auth/_auth.sign-up.tsx",
      "parent": "/(auth)/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
